"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var prop_types_1 = __importDefault(require("prop-types"));
var inflection_1 = __importDefault(require("inflection"));
var pure_1 = __importDefault(require("recompose/pure"));
var compose_1 = __importDefault(require("recompose/compose"));
var translate_1 = __importDefault(require("../i18n/translate"));
exports.FieldTitle = function (_a) {
    var resource = _a.resource, source = _a.source, label = _a.label, isRequired = _a.isRequired, translate = _a.translate;
    return (react_1.default.createElement("span", null,
        typeof label !== 'undefined'
            ? translate(label, { _: label })
            : typeof source !== 'undefined'
                ? translate("resources." + resource + ".fields." + source, {
                    _: inflection_1.default.transform(source, [
                        'underscore',
                        'humanize',
                    ]),
                })
                : '',
        isRequired && ' *'));
};
exports.FieldTitle.propTypes = {
    isRequired: prop_types_1.default.bool,
    resource: prop_types_1.default.string,
    source: prop_types_1.default.string,
    label: prop_types_1.default.string,
    translate: prop_types_1.default.func.isRequired,
};
exports.FieldTitle.defaultProps = {
    translate: function (x) { return x; },
};
// wat? TypeScript looses the displayName if we don't set it explicitly
exports.FieldTitle.displayName = 'FieldTitle';
var enhance = compose_1.default(translate_1.default, pure_1.default);
exports.default = enhance(exports.FieldTitle);
